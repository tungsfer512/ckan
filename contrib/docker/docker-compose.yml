# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3"

# volumes:
#   ckan_config:
#   ckan_home:
#   ckan_storage:
#   pg_data:
  # solr_data:


networks:
  ckan:
    driver: bridge

services:
  ckan:
    container_name: ckan
    build:
      context: ../../
      dockerfile: Dockerfile
      args:
        - CKAN_SITE_URL=${CKAN_SITE_URL}
    env_file:
      - ./.env
    links:
      - db
      - solr
      - redis
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_DATAPUSHER_URL=http://datapusher:8800
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
    # Debug with pdb (example) - Interact with `docker attach $(docker container ls -qf name=ckan)`
    #command: 'python -m pdb /usr/lib/ckan/venv/bin/ckan --config /etc/ckan/production.ini run --host 0.0.0.0 --passthrough-errors'
    #tty: true
    #stdin_open: true
    networks:
      - ckan
    volumes:
      - ../../production.ini:/etc/ckan/production.ini
      - /ss_data_ckan/ckan_storage:/var/lib/ckan

  # datapusher:
  #   container_name: datapusher
  #   image: clementmouchet/datapusher
  #   ports:
  #     - "8800:8800"

  db:
    container_name: db
    build:
      context: ../../
      dockerfile: contrib/docker/postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - /ss_data_ckan/pg_data:/var/lib/postgresql/data
    networks:
      - ckan
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "ckan" ]

  solr:
    container_name: solr
    build:
      context: ../../
      dockerfile: contrib/docker/solr/Dockerfile
    networks:
      - ckan
    restart: unless-stopped
    volumes:
      - /ss_data_ckan/solr_data:/opt/solr/server/solr/ckan/data

  minio:
    image: minio/minio
    hostname: minio
    container_name: minio
    command: server --console-address ":9001"
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: xqORsmOYEKkUltCStWaYcOEK1M24FDRd
      MINIO_VOLUMES: /data
    networks:
      - ckan
    restart: unless-stopped
    volumes:
      - /ss_data_ckan/minio-data:/data

  redis:
    container_name: redis
    image: redis:latest
    restart: unless-stopped
    networks:
      - ckan
